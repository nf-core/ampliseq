nextflow_pipeline {

    name "Test Workflow main.nf"
    script "main.nf"
    tag "nf-core/ampliseq"

    test("Minimal PE") {

        options "-profile test,docker"

        when {
            params {
                outdir = "$outputDir"
            }
        }

        then {
            assertAll(
                { assert workflow.success },
                { assert snapshot(path("$outputDir/pipeline_info/software_versions.yml")).match("software_versions") },
                { assert snapshot(path("$outputDir/overall_summary.tsv")).match("overall_summary_tsv") },
                { assert snapshot(path("$outputDir/asv_length_filter/").list()).match("asv_length_filter") },
                { assert snapshot(path("$outputDir/barrnap/ASV_seqs.ssu.fasta"),
                                  path("$outputDir/barrnap/ASV_table.ssu.tsv"), 
                                  path("$outputDir/barrnap/rrna.arc.gff"),
                                  path("$outputDir/barrnap/rrna.bac.gff"),
                                  path("$outputDir/barrnap/rrna.euk.gff"),
                                  path("$outputDir/barrnap/stats.ssu.tsv"),
                                  path("$outputDir/barrnap/rrna.mito.gff")).match("barrnap") },
                { assert new File("$outputDir/barrnap/summary.tsv").exists() },
                { assert snapshot(path("$outputDir/cutadapt/cutadapt_summary.tsv")).match("cutadapt") },
                { assert new File("$outputDir/cutadapt/assignTaxonomy.cutadapt.log").exists() },    
                { assert new File("$outputDir/cutadapt/sampleID_1a.trimmed.cutadapt.log").exists() },
                { assert new File("$outputDir/cutadapt/sampleID_1.trimmed.cutadapt.log").exists() },
                { assert new File("$outputDir/cutadapt/sampleID_2a.trimmed.cutadapt.log").exists() },
                { assert new File("$outputDir/cutadapt/sampleID_2.trimmed.cutadapt.log").exists() },
                { assert snapshot(path("$outputDir/dada2/ASV_seqs.fasta"),
                                  path("$outputDir/dada2/ASV_table.tsv"),
                                  path("$outputDir/dada2/ref_taxonomy.txt"),
                                  path("$outputDir/dada2/DADA2_stats.tsv"),
                                  path("$outputDir/dada2/DADA2_table.rds"),
                                  path("$outputDir/dada2/DADA2_table.tsv")).match("dada2") },
                { assert new File("$outputDir/dada2/ASV_tax.tsv").exists() },  
                { assert new File("$outputDir/dada2/ASV_tax_species.tsv").exists() },
                { assert new File("$outputDir/fastqc/sampleID_1_1_fastqc.html").exists() },
                { assert new File("$outputDir/fastqc/sampleID_1_2_fastqc.html").exists() },
                { assert new File("$outputDir/fastqc/sampleID_1a_1_fastqc.html").exists() },
                { assert new File("$outputDir/fastqc/sampleID_1a_2_fastqc.html").exists() },
                { assert new File("$outputDir/fastqc/sampleID_2_1_fastqc.html").exists() },
                { assert new File("$outputDir/fastqc/sampleID_2_2_fastqc.html").exists() },
                { assert new File("$outputDir/fastqc/sampleID_2a_1_fastqc.html").exists() },
                { assert new File("$outputDir/fastqc/sampleID_2a_2_fastqc.html").exists() },
                { assert snapshot(path("$outputDir/input/Samplesheet.tsv"),
                                  path("$outputDir/input/Metadata.tsv")).match("input") },
                { assert snapshot(path("$outputDir/multiqc/multiqc_data/multiqc_fastqc.txt"),
                                  path("$outputDir/multiqc/multiqc_data/multiqc_general_stats.txt"),
                                  path("$outputDir/multiqc/multiqc_data/multiqc_cutadapt.txt")).match("multiqc") },
                { assert new File("$outputDir/qiime2/abundance_tables/abs-abund-table-2.tsv").exists() },
                { assert new File("$outputDir/qiime2/abundance_tables/abs-abund-table-3.tsv").exists() },
                { assert new File("$outputDir/qiime2/abundance_tables/abs-abund-table-4.tsv").exists() },
                { assert new File("$outputDir/qiime2/abundance_tables/count_table_filter_stats.tsv").exists() },
                { assert new File("$outputDir/qiime2/abundance_tables/filtered-table.qza").exists() },
                { assert new File("$outputDir/qiime2/alpha-rarefaction/faith_pd.csv").exists() },
                { assert new File("$outputDir/qiime2/alpha-rarefaction/observed_features.csv").exists() },
                { assert new File("$outputDir/qiime2/alpha-rarefaction/shannon.csv").exists() },
                { assert new File("$outputDir/qiime2/diversity/alpha_diversity/faith_pd_vector/kruskal-wallis-pairwise-mix8.csv").exists() },
                { assert new File("$outputDir/qiime2/diversity/alpha_diversity/faith_pd_vector/kruskal-wallis-pairwise-treatment1.csv").exists() },
                { assert new File("$outputDir/qiime2/diversity/alpha_diversity/observed_features_vector/kruskal-wallis-pairwise-mix8.csv").exists() },
                { assert new File("$outputDir/qiime2/diversity/alpha_diversity/observed_features_vector/kruskal-wallis-pairwise-treatment1.csv").exists() },
                { assert new File("$outputDir/qiime2/diversity/alpha_diversity/shannon_vector/kruskal-wallis-pairwise-mix8.csv").exists() },
                { assert new File("$outputDir/qiime2/diversity/alpha_diversity/shannon_vector/kruskal-wallis-pairwise-treatment1.csv").exists() },
                { assert new File("$outputDir/qiime2/diversity/beta_diversity/bray_curtis_distance_matrix-mix8/permanova-pairwise.csv").exists() },
                { assert new File("$outputDir/qiime2/diversity/beta_diversity/bray_curtis_distance_matrix-treatment1/permanova-pairwise.csv").exists() },
                { assert new File("$outputDir/qiime2/diversity/beta_diversity/jaccard_distance_matrix-mix8/permanova-pairwise.csv").exists() },
                { assert new File("$outputDir/qiime2/diversity/beta_diversity/jaccard_distance_matrix-treatment1/permanova-pairwise.csv").exists() },
                { assert new File("$outputDir/qiime2/diversity/beta_diversity/unweighted_unifrac_distance_matrix-mix8/permanova-pairwise.csv").exists() },
                { assert new File("$outputDir/qiime2/diversity/beta_diversity/unweighted_unifrac_distance_matrix-treatment1/permanova-pairwise.csv").exists() },
                { assert new File("$outputDir/qiime2/diversity/beta_diversity/weighted_unifrac_distance_matrix-mix8/permanova-pairwise.csv").exists() },
                { assert new File("$outputDir/qiime2/diversity/beta_diversity/weighted_unifrac_distance_matrix-treatment1/permanova-pairwise.csv").exists() },
                { assert new File("$outputDir/qiime2/input/rep-seqs.qza").exists() },
                { assert new File("$outputDir/qiime2/input/table.qza").exists() },
                { assert new File("$outputDir/qiime2/input/taxonomy.qza").exists() },
                { assert new File("$outputDir/qiime2/phylogenetic_tree/rooted-tree.qza").exists() },
                { assert new File("$outputDir/qiime2/phylogenetic_tree/tree.nwk").exists() },
                { assert new File("$outputDir/qiime2/rel_abundance_tables/rel-table-2.tsv").exists() },
                { assert new File("$outputDir/qiime2/rel_abundance_tables/rel-table-3.tsv").exists() },
                { assert new File("$outputDir/qiime2/rel_abundance_tables/rel-table-4.tsv").exists() },
                { assert new File("$outputDir/qiime2/rel_abundance_tables/rel-table-ASV.tsv").exists() },
                { assert new File("$outputDir/qiime2/rel_abundance_tables/rel-table-ASV_with-DADA2-tax.tsv").exists() },
                { assert new File("$outputDir/qiime2/rel_abundance_tables/rel-table-ASV_with-QIIME2-tax.tsv").exists() },
                { assert new File("$outputDir/qiime2/representative_sequences/descriptive_stats.tsv").exists() },
                { assert new File("$outputDir/qiime2/representative_sequences/filtered-sequences.qza").exists() },
                { assert new File("$outputDir/qiime2/representative_sequences/rep-seq.fasta").exists() },
                { assert new File("$outputDir/qiime2/representative_sequences/seven_number_summary.tsv").exists() },
                { assert new File("$outputDir/qiime2/taxonomy/GTGYCAGCMGCCGCGGTAA-GGACTACNVGGGTWTCTAAT-classifier.qza").exists() },
                { assert new File("$outputDir/qiime2/taxonomy/ref_taxonomy.txt").exists() },
                { assert new File("$outputDir/qiime2/taxonomy/taxonomy.tsv").exists() },
                { assert new File("$outputDir/qiime2/abundance_tables/feature-table.tsv").exists() },
                { assert new File("$outputDir/qiime2/abundance_tables/feature-table.biom").exists() },
                { assert new File("$outputDir/qiime2/ancom/Category-badpairwise10-ASV/percent-abundances.tsv").exists() },
                { assert new File("$outputDir/qiime2/ancom/Category-badpairwise10-level-2/percent-abundances.tsv").exists() },
                { assert new File("$outputDir/qiime2/ancom/Category-badpairwise10-level-3/percent-abundances.tsv").exists() },
                { assert new File("$outputDir/qiime2/ancom/Category-badpairwise10-level-4/percent-abundances.tsv").exists() },
                { assert new File("$outputDir/qiime2/ancom/Category-mix8-ASV/percent-abundances.tsv").exists() },
                { assert new File("$outputDir/qiime2/ancom/Category-mix8-level-2/percent-abundances.tsv").exists() },
                { assert new File("$outputDir/qiime2/ancom/Category-mix8-level-3/percent-abundances.tsv").exists() },
                { assert new File("$outputDir/qiime2/ancom/Category-mix8-level-4/percent-abundances.tsv").exists() },
                { assert new File("$outputDir/qiime2/ancom/Category-treatment1-ASV/percent-abundances.tsv").exists() },
                { assert new File("$outputDir/qiime2/ancom/Category-treatment1-level-2/percent-abundances.tsv").exists() },
                { assert new File("$outputDir/qiime2/ancom/Category-treatment1-level-3/percent-abundances.tsv").exists() },
                { assert new File("$outputDir/qiime2/ancom/Category-treatment1-level-4/percent-abundances.tsv").exists() },
                { assert snapshot(path("$outputDir/SBDI/dna.tsv"),
                                  path("$outputDir/SBDI/emof.tsv"),
                                  path("$outputDir/SBDI/event.tsv")).match("SBDI") },
                { assert new File("$outputDir/SBDI/annotation.tsv").exists() },
                { assert new File("$outputDir/SBDI/asv-table.tsv").exists() }                                                                 
            )
        }

    }

}
