nextflow_pipeline {

    name "Test Workflow main.nf"
    script "main.nf"
    tag "nf-core/ampliseq"

    test("Minimal PE Novaseq") {

        options "-profile test_novaseq,docker"

        when {
            params {
                outdir = "$outputDir"
            }
        }

        then {
            assertAll(
                { assert workflow.success },
                { assert snapshot(path("$outputDir/pipeline_info/software_versions.yml")).match("software_versions") },
                { assert snapshot(path("$outputDir/dada2/ASV_seqs.fasta"),
                                  path("$outputDir/dada2/ASV_table.tsv"),
                                  path("$outputDir/dada2/DADA2_stats.tsv"),
                                  path("$outputDir/dada2/DADA2_table.rds"),
                                  path("$outputDir/dada2/DADA2_table.tsv")).match("dada2") },
                { assert new File("$outputDir/fastqc/S1_1_fastqc.html").exists() },
                { assert new File("$outputDir/fastqc/S1_2_fastqc.html").exists() },
                { assert new File("$outputDir/fastqc/S2_1_fastqc.html").exists() },
                { assert new File("$outputDir/fastqc/S2_2_fastqc.html").exists() },
                { assert snapshot(path("$outputDir/input/Samplesheet_novaseq.tsv")).match("input") },
                { assert snapshot(path("$outputDir/multiqc/multiqc_data/multiqc_fastqc.txt"),
                                  path("$outputDir/multiqc/multiqc_data/multiqc_general_stats.txt")).match("multiqc") }                                                            
            )
        }

    }

}
