nextflow_pipeline {

    name "Test pipeline"
    script "../main.nf"
    tag "pipeline"
    profile "test_pacbio_its"

    test("-profile test_pacbio_its") {

        when {
            params {
                outdir = "$outputDir"
            }
        }

        then {
            // stable_name: All files + folders in ${params.outdir}/ with a stable name
            def stable_name = getAllFilesFromDir(params.outdir, relative: true, includeDir: true, ignore: ['pipeline_info/*.{html,json,txt}'])

            assert workflow.success
            assertAll(
                { assert snapshot(
                    // Number of successful tasks
                    workflow.trace.succeeded().size(),
                    // pipeline versions.yml file for multiqc from which Nextflow version is removed because we test pipelines on multiple Nextflow versions
                    removeNextflowVersion("$outputDir/pipeline_info/software_versions.yml"),
                    // All stable path name, with a relative path
                    stable_name,
                    // Manually chosen files for content checks
                    path("$outputDir/overall_summary.tsv"),
                    path("$outputDir/barrnap/rrna.arc.gff"),
                    path("$outputDir/barrnap/rrna.bac.gff"),
                    path("$outputDir/barrnap/rrna.euk.gff"),
                    path("$outputDir/barrnap/rrna.mito.gff"),
                    path("$outputDir/cutadapt/cutadapt_summary.tsv"),
                    path("$outputDir/dada2/ASV_seqs.fasta"),
                    path("$outputDir/dada2/ASV_table.tsv"),
                    path("$outputDir/dada2/DADA2_stats.tsv"),
                    path("$outputDir/dada2/DADA2_table.rds"),
                    path("$outputDir/dada2/DADA2_table.tsv"),
                    path("$outputDir/input/Samplesheet_pacbio_ITS.tsv"),
                    path("$outputDir/input/Metadata_pacbio_ITS.tsv"),
                    path("$outputDir/itsx/ASV_ITS_seqs.full.fasta"),
                    path("$outputDir/itsx/ITSx.args.txt"),
                    path("$outputDir/multiqc/multiqc_data/multiqc_fastqc.txt"),
                    path("$outputDir/multiqc/multiqc_data/multiqc_general_stats.txt"),
                    path("$outputDir/multiqc/multiqc_data/multiqc_cutadapt.txt"),
                    path("$outputDir/SBDI/dna.tsv"),
                    path("$outputDir/SBDI/emof.tsv"),
                    path("$outputDir/SBDI/event.tsv")
                ).match() }
            )
        }
    }
}
